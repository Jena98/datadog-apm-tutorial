apiVersion: apps/v1
kind: Deployment
metadata:
  name: datadog-agent-test
  namespace: default
  labels:
    app: datadog-agent-test
    tags.datadoghq.com/env: "cp-prod"
    tags.datadoghq.com/service: "datadog-agent-test"
    tags.datadoghq.com/version: "v0.1"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: datadog-agent-test
        tags.datadoghq.com/env: "cp-prod"
        tags.datadoghq.com/service: "datadog-agent-test"
        tags.datadoghq.com/version: "v0.1"
    spec:
      affinity:    
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - apps
      restartPolicy: Always             
      containers:
        - name: datadog-agent-test
          image: 031393287108.dkr.ecr.ap-northeast-2.amazonaws.com/devops-test:latest
          imagePullPolicy: Always      
          ports:
          - containerPort: 8080
            protocol: TCP          
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version'] 
            - name: DD_DOGSTATSD_SOCKET
              value: '/var/run/datadog/dsd.socket'                           
            - name: DD_LOGS_INJECTION
              value: "true"            
          volumeMounts:
          - name: apmsocketpath
            mountPath: /var/run/datadog
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath                                         
  selector:
    matchLabels:
      app: datadog-agent-test
